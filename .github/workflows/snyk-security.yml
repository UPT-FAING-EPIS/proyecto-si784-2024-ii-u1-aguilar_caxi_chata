# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# A sample workflow which sets up Snyk to analyze the full Snyk platform (Snyk Open Source, Snyk Code,
# Snyk Container and Snyk Infrastructure as Code)
# The setup installs the Snyk CLI - for more details on the possible commands
# check https://docs.snyk.io/snyk-cli/cli-reference
# The results of Snyk Code are then uploaded to GitHub Security Code Scanning
#
# In order to use the Snyk Action you will need to have a Snyk API token.
# More details in https://github.com/snyk/actions#getting-your-snyk-token
# or you can signup for free at https://snyk.io/login
#
# For more examples, including how to limit scans to only high-severity issues
# and fail PR checks, see https://github.com/snyk/actions/

name: Workflow for dotNET using Snyk

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  security:
    runs-on: windows-latest  # Utiliza Windows ya que trabajas con .NET Framework

    steps:
      # Paso 1: Checkout del código fuente
      - uses: actions/checkout@master

      # Paso 2: Instalar MSBuild
      - name: Set up MSBuild
        uses: microsoft/setup-msbuild@v1

      # Paso 3: Restaurar paquetes NuGet usando el archivo de solución
      - name: Restore NuGet packages
        run: nuget restore Proyecto_RUMI/Proyecto_Web2_Aguilar_Chino_Gonzales_Perez.sln

      # Paso 4: Compilar el proyecto
      - name: Build the solution
        run: msbuild /t:build /p:Configuration=Release Proyecto_RUMI/Proyecto_Web2_Aguilar_Chino_Gonzales_Perez.sln

      # Paso 5: Instalar Snyk CLI en Windows
      - name: Install Snyk CLI
        run: npm install -g snyk

      # Paso 6: Ejecutar Snyk CLI para verificar vulnerabilidades
      - name: Run Snyk to check for vulnerabilities
        run: snyk test --severity-threshold=high --sarif-file-output=snyk.sarif --file=Proyecto_RUMI/Proyecto_Web2_Aguilar_Chino_Gonzales_Perez.sln
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      # Paso 7: Subir los resultados a GitHub Code Scanning
      - name: Upload SARIF result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif
