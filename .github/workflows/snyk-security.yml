name: Snyk Analysis

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  snyk:
    name: Snyk Vulnerability Analysis
    runs-on: windows-latest

    steps:
      - name: Enable long paths in Git
        run: git config --system core.longpaths true

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          path: './repo'

      - name: List files in the repository
        run: ls -R ./repo

      # Paso para instalar MSBuild
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1

      - name: Restore NuGet packages
        run: nuget restore ./repo/Proyecto_RUMI/Proyecto_Web2_Aguilar_Chino_Gonzales_Perez.sln

      # Instalar la CLI de Snyk
      - name: Install Snyk CLI
        run: npm install -g snyk

      # Ejecutar escaneo de Snyk para verificar vulnerabilidades
      - name: Run Snyk to check for vulnerabilities
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk test --severity-threshold=high --sarif-file-output=snyk.sarif --file=./repo/Proyecto_RUMI/Proyecto_Web2_Aguilar_Chino_Gonzales_Perez.sln

      # Generar reporte HTML a partir del archivo SARIF
      - name: Generate HTML report from SARIF
        run: |
          echo "<!DOCTYPE html>
          <html lang='es'>
          <head>
              <meta charset='UTF-8'>
              <meta name='viewport' content='width=device-width, initial-scale=1.0'>
              <title>Resultados de Vulnerabilidades</title>
              <style>
                  body { font-family: Arial, sans-serif; margin: 20px; }
                  table { width: 100%; border-collapse: collapse; }
                  th, td { border: 1px solid #ddd; padding: 8px; }
                  th { background-color: #f2f2f2; }
              </style>
          </head>
          <body>
              <h1>Resultados de Vulnerabilidades</h1>
              <table>
                  <thead>
                      <tr>
                          <th>Regla ID</th>
                          <th>Nivel</th>
                          <th>Mensaje</th>
                          <th>Ubicación</th>
                      </tr>
                  </thead>
                  <tbody>" > snyk_report.html

          # Procesa el archivo SARIF para extraer los resultados
          cat snyk.sarif | jq -r '.runs[].results[] | "<tr><td>\(.ruleId)</td><td>\(.level)</td><td>\(.message.text)</td><td>\(.locations[0].physicalLocation.artifactLocation.uri) (Línea \(.locations[0].physicalLocation.region.startLine))</td></tr>"' >> snyk_report.html

          echo "</tbody></table></body></html>" >> snyk_report.html

      # Subir el reporte HTML como artefacto
      - name: Upload HTML report as artifact
        uses: actions/upload-artifact@v3
        with:
          name: snyk-report
          path: snyk_report.html

